<Window x:Class="HOK.KeynoteEditor.UserControls.KeynotePanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             Height="800" Width="600" Title="Keynote Editor" Icon="Images/hoklogo.ico" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="commonButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="#FFE6E6E6"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,3,16,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1ba1e2" />
                                <Setter Property="BorderBrush" Value="#1ba1e2" />
                                <Setter Property="Foreground" Value="#ffffff" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FF6BC3EE" />
                                <Setter Property="BorderBrush" Value="#FF6BC3EE"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Chrome" Property="BorderBrush" Value="#1ba1e2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="False" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
            <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
        </Style>
        <Style x:Key="textBlockStyle" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected}" Value="False">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="textBoxStyle" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <HierarchicalDataTemplate x:Key="EditableItemTemplate" ItemsSource="{Binding ChildrenItems}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid>
                    <TextBlock x:Name="textBlockKey" Margin="2" Text="{Binding KeynoteItem.key}" Style="{StaticResource textBlockStyle}"/>
                    <TextBox x:Name="textBoxKey" Margin="2" Text="{Binding KeynoteItem.key, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                             Style="{StaticResource textBoxStyle}" TextChanged="textBoxKey_TextChanged"/>
                </Grid>
                <Grid Grid.Column="1">
                    <TextBlock x:Name="textBlockDescription" Margin="15,2,2,2" Text="{Binding KeynoteItem.description}" Style="{StaticResource textBlockStyle}"/>
                    <TextBox x:Name="textBoxDescription" Margin="15,2,2,2" Text="{Binding KeynoteItem.description, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                             Style="{StaticResource textBoxStyle}" TextChanged="textBoxDescription_TextChanged"/>
                </Grid>
            </Grid>
        </HierarchicalDataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition x:Name="projectInfoRow" Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="45"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Expander Header="Project Information" HorizontalAlignment="Stretch" Margin="5" VerticalAlignment="Stretch">
            <Expander.Background>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
            </Expander.Background>
            <Grid Margin="5" Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Label Content="Project Number:" HorizontalAlignment="Left" Margin="11,5,0,0" VerticalAlignment="Top"/>
                <Label Content="Project Name:" HorizontalAlignment="Left" Margin="23,5,0,0" Grid.Row="1" VerticalAlignment="Top"/>
                <Label Content="Keynote File:" HorizontalAlignment="Left" Margin="30,5,0,5" Grid.Row="2" VerticalAlignment="Top"/>
                <TextBlock HorizontalAlignment="Stretch" Margin="112,10,120,0" TextWrapping="Wrap" Text="{Binding ProjectInfo.projectNumber}" VerticalAlignment="Top" FontWeight="SemiBold"/>
                <TextBlock Grid.Row="1" HorizontalAlignment="Stretch" Margin="112,10,120,0" TextWrapping="Wrap" Text="{Binding ProjectInfo.projectName}" VerticalAlignment="Top" FontWeight="SemiBold"/>
                <TextBlock Grid.Row="2" HorizontalAlignment="Stretch" Margin="112,10,30,0" TextWrapping="Wrap" Text="{Binding SetInfo.name}" VerticalAlignment="Top"/>
                <Button Grid.Row="2" HorizontalAlignment="Right" Margin="0,5,15,0" VerticalAlignment="Top" Width="100" Height="25" Style="{StaticResource commonButtonStyle}" Command="{Binding ImportCommand}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                        <Image Margin="0,0,10,0" Height="16" Width="16" Source="Images/import.png" />
                        <TextBlock>Import</TextBlock>
                    </StackPanel>
                </Button>
            </Grid>
        </Expander>
        <GroupBox Header="Keynotes" HorizontalAlignment="Stretch" Margin="5" Grid.Row="1" VerticalAlignment="Stretch">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>
                <TreeView HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5" ItemTemplate="{StaticResource EditableItemTemplate}"
                          ItemContainerStyle="{StaticResource TreeViewItemStyle}" ItemsSource="{Binding KeynoteTreeView}">
                    <TreeView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Add Item" Command="{Binding AddItemCommand}">
                                <MenuItem.Icon>
                                    <Image Height="16" Width="16" Source="Images/add.png"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Add Child Item" Command="{Binding AddChildItemCommand}">
                                <MenuItem.Icon>
                                    <Image Height="16" Width="16" Source="Images/addchild.ico"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="Delete Item" Command="{Binding DeleteItemCommand}">
                                <MenuItem.Icon>
                                    <Image Height="16" Width="16" Source="Images/cancel.png"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </TreeView.ContextMenu>
                </TreeView>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5" Style="{StaticResource commonButtonStyle}" 
                            Command="{Binding AddItemCommand}">
                        <StackPanel Orientation="Horizontal">
                            <Image Width="20" Height="20" Source="Images/add.png"/>
                            <TextBlock TextAlignment="Center" Margin="10,0,0,0">Add Item</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5" Style="{StaticResource commonButtonStyle}"
                            Command="{Binding AddChildItemCommand}">
                        <StackPanel Orientation="Horizontal">
                            <Image Width="20" Height="20" Source="Images/addchild.ico"/>
                            <TextBlock TextAlignment="Center" Margin="10,0,0,0">Add Child Item</TextBlock>
                        </StackPanel>
                    </Button>
                    <Button Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5" Style="{StaticResource commonButtonStyle}"
                            Command="{Binding DeleteItemCommand}">
                        <StackPanel Orientation="Horizontal">
                            <Image Width="20" Height="20" Source="Images/cancel.png"/>
                            <TextBlock TextAlignment="Center" Margin="10,0,0,0">Delete Item</TextBlock>
                        </StackPanel>
                    </Button>
                </Grid>
            </Grid>
        </GroupBox>
        <Button Content="Apply" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,15,5" Grid.Row="2" Width="80" Height="30"
                Style="{StaticResource commonButtonStyle}" Command="{Binding ApplyCommand}"/>
        <Button x:Name="buttonCancel" Content="Cancel" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,100,0" Grid.Row="2" Width="80" Height="30"
                Style="{StaticResource commonButtonStyle}" Click="buttonCancel_Click" />
        <StatusBar HorizontalAlignment="Stretch" Margin="0" Grid.Row="3" VerticalAlignment="Stretch">
            <StatusBarItem>
                <TextBlock  Name="statusLable" Text="{Binding StatusText}"/>
            </StatusBarItem>
            <StatusBarItem  Grid.Column="1">
                <ProgressBar Value="0" Width="140" Height="16" Name="progressBar" Visibility="Hidden" />
            </StatusBarItem>
        </StatusBar>
        
    </Grid>
</Window>
