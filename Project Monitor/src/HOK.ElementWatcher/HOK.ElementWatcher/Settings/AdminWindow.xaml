<Window x:Class="HOK.ElementWatcher.Settings.AdminWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             Height="800" Width="500" MinWidth="500" Icon="Images/hoklogo.ico" WindowStartupLocation="CenterScreen"
             Title="Admin Tool" Loaded="Window_Loaded">
    <Window.Resources>
        <Style x:Key="colorButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="#FFE6E6E6"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1ba1e2" />
                                <Setter Property="BorderBrush" Value="#1ba1e2" />
                                <Setter Property="Foreground" Value="#ffffff" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FF6BC3EE" />
                                <Setter Property="BorderBrush" Value="#FF6BC3EE"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Chrome" Property="BorderBrush" Value="#1ba1e2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="HorizontalGridLinesBrush" Value="LightGray"/>
            <Setter Property="VerticalGridLinesBrush" Value="LightGray"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsReadOnly}" Value="true">
                    <Setter Property="Foreground" Value="Gray"/>                    
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="170"/>
            <RowDefinition/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <GroupBox Header="Project Info" HorizontalAlignment="Stretch" Margin="5" VerticalAlignment="Stretch">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Label Content="Project Number:" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
                <Label Grid.Row="1" Content="Project Name:" HorizontalAlignment="Left" Margin="22,10,0,0" VerticalAlignment="Top"/>
                <Label Grid.Row="2" Content="Central File:" HorizontalAlignment="Left" Margin="34,10,0,0" VerticalAlignment="Top"/>

                <Label Content="{Binding Configuration.ProjectFileInfo.ProjectInfo.ProjectNumber}" HorizontalAlignment="Left" Margin="110,10,0,0" VerticalAlignment="Top"/>
                <Label Grid.Row="1" Content="{Binding Configuration.ProjectFileInfo.ProjectInfo.ProjectName}" HorizontalAlignment="Left" Margin="110,10,0,0" VerticalAlignment="Top"/>
                <TextBlock HorizontalAlignment="Stretch" Margin="110,10,10,5" Grid.Row="2" TextWrapping="Wrap" Text="{Binding Configuration.ProjectFileInfo.CentralPath}" VerticalAlignment="Stretch"/>
                <Button Content="Edit" Style="{StaticResource colorButtonStyle}" HorizontalAlignment="Right" Margin="0,10,10,0" VerticalAlignment="Top" Width="75"/>
            </Grid>
        </GroupBox>
        <GroupBox Header="Updaters" HorizontalAlignment="Stretch" Margin="5,0,5,5" Grid.Row="1" VerticalAlignment="Stretch">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition/>
                    <RowDefinition>
                        <RowDefinition.Style>
                            <Style TargetType="RowDefinition">
                                <Setter Property="Height" Value="40"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=expanderRequest, Path=IsExpanded}" Value="True">
                                        <Setter Property="Height" Value="240"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=expanderRequest, Path=IsExpanded}" Value="False">
                                        <Setter Property="Height" Value="40"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RowDefinition.Style>
                    </RowDefinition>
                </Grid.RowDefinitions>
                <ComboBox x:Name="comboBoxUpdater" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="28" Background="Transparent" Margin="10,7,120,0" 
                          ItemsSource="{Binding Configuration.ProjectUpdaters}" DisplayMemberPath="UpdaterName" SelectedIndex="{Binding SelectedUpdaterIndex}"/>
                <Button x:Name="buttonUpdate" Style="{StaticResource colorButtonStyle}" HorizontalAlignment="Right" Margin="0,7,10,0" 
                        Command ="{Binding UpdaterSwitchCommand}" VerticalAlignment="Top" Width="100" Height="28">
                    <StackPanel Orientation="Horizontal">
                        <Image Width="18" Height="18">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding  ElementName=comboBoxUpdater, Path=SelectedItem.IsUpdaterOn}" Value="true">
                                            <Setter Property="Source" Value="Images/on.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=comboBoxUpdater, Path=SelectedItem.IsUpdaterOn}" Value="false">
                                            <Setter Property="Source" Value="Images/off.png"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <TextBlock  Margin="10,0,0,0" VerticalAlignment="Center" TextAlignment="Center" >
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding  ElementName=comboBoxUpdater, Path=SelectedItem.IsUpdaterOn}" Value="true">
                                            <Setter Property="Text" Value="On"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding  ElementName=comboBoxUpdater, Path=SelectedItem.IsUpdaterOn}" Value="false">
                                            <Setter Property="Text" Value="Off"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </Button>
                <DataGrid x:Name="dataGridTrigger" HorizontalAlignment="Stretch" Margin="10,0" Grid.Row="1" VerticalAlignment="Stretch"
                          ItemsSource="{Binding ElementName=comboBoxUpdater, Path=SelectedItem.CategoryTriggers}" SelectedIndex="{Binding SelectedTriggerIndex}"
                          CanUserAddRows="False" CanUserDeleteRows="False" IsEnabled="{Binding ElementName=comboBoxUpdater, Path=SelectedItem.IsUpdaterOn}">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Path=IsEnabled, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Category Name" Binding="{Binding CategoryName}" Width ="1*"/>
                        <DataGridTextColumn Header="Modified By" Binding="{Binding ModifiedBy}" Width ="0.5*"/>
                        <DataGridTextColumn Header="Date Modified" Binding="{Binding Path=Modified, StringFormat=G}" Width ="0.5*"/>
                    </DataGrid.Columns>
                </DataGrid>
                <Expander Name ="expanderRequest" Header="Requests" HorizontalAlignment="Stretch" Margin="10,5" Grid.Row="2" VerticalAlignment="Stretch" Background="#FFE6E6E6">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="35"/>
                        </Grid.RowDefinitions>
                        <DataGrid HorizontalAlignment="Stretch" Margin="10" VerticalAlignment="Stretch"
                          ItemsSource="{Binding ElementName=dataGridTrigger, Path=SelectedItem.Requests}"
                                  CanUserAddRows="False"  CanUserDeleteRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Requested By" Binding="{Binding RequestedBy}" Width ="0.5*"/>
                                <DataGridTextColumn Header="Date Requested" Binding="{Binding Path=Requested, StringFormat=G}" Width ="0.5*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Button Name="buttonAccept" Content="Accept" Style="{StaticResource colorButtonStyle}" 
                                HorizontalAlignment="Right" Margin="0,0,90,0" Grid.Row="1" VerticalAlignment="Top" Width="75" Height="25" Background="White" Foreground="#333333"
                                Command="{Binding AcceptCommand}"/>
                        <Button Name="buttonIgnore" Content="Ignore" Style="{StaticResource colorButtonStyle}" 
                                HorizontalAlignment="Right" Margin="0,0,10,0" Grid.Row="1" VerticalAlignment="Top" Width="75" Height="25" Background="White" Foreground="#333333"
                                Command="{Binding IgnoreCommand}"/>
                    </Grid>
                </Expander>
            </Grid>
        </GroupBox>
        <Button x:Name="buttonCancel" Content="Cancel" Style="{StaticResource colorButtonStyle}" HorizontalAlignment="Right" Margin="10" Grid.Row="2" VerticalAlignment="Top" Width="75" Height="28" Click="buttonCancel_Click"/>
        <Button x:Name="buttonApply" Content="Apply" Command="{Binding ApplyCommand}" Style="{StaticResource colorButtonStyle}" HorizontalAlignment="Right" Margin="0,10,95,0" Grid.Row="2" VerticalAlignment="Top" Width="75" Height="28" Click="buttonApply_Click"/>
    </Grid>
</Window>
