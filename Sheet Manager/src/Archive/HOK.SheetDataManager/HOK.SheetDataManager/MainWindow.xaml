<Window x:Class="HOK.SheetDataManager.MainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             Height="1000" Width="1000" MinHeight="1000" MinWidth="1000" Icon="Images/hoklogo.ico" Title="Sheet Data Manager" UseLayoutRounding="True" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="HorizontalGridLinesBrush" Value="LightGray"/>
            <Setter Property="VerticalGridLinesBrush" Value="LightGray"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
        </Style>
        <Style x:Key="imageEnabled" TargetType="Image">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="updaterToggle" TargetType="Image">
            <Style.Triggers>
                <Trigger Property="Tag" Value="Off">
                    <Setter Property="Source" Value="Images/updater_off.ico"/>
                </Trigger>
                <Trigger Property="Tag" Value="On">
                    <Setter Property="Source" Value="Images/updater_on.ico"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
    </Window.Resources>
    <Grid IsManipulationEnabled="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition Height="50"/>
            <RowDefinition/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="0.6*" MinHeight="270"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <ToolBarTray Margin="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <ToolBar x:Name="toolBar" Height="80" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Button x:Name="buttonOpen" VerticalAlignment="Stretch"  Width="110" Click="buttonOpen_Click">
                    <StackPanel Orientation="Vertical" >
                        <Image Width="32" Height="32"  Stretch="None" Source="Images/databaseLink.png" />
                        <TextBlock Margin="0,5,0,5">Connect Database</TextBlock>
                    </StackPanel>
                </Button>
                <Separator/>
                <Button x:Name="buttonSheet"  VerticalAlignment="Stretch" Click="buttonSheet_Click" IsEnabled="False">
                    <StackPanel Orientation="Vertical" >
                        <Image  Style="{StaticResource imageEnabled}" Width="32" Height="32"  Stretch="None" Source="Images/sync.png"/>
                        <TextBlock Margin="0,5,0,5"  Width="100" TextWrapping="Wrap" TextAlignment="Center">Create/Update Sheets</TextBlock>
                    </StackPanel>
                </Button>
                <Button x:Name="buttonRevision" Margin="10,0,0,0" VerticalAlignment="Stretch" IsEnabled="False" Click="buttonRevision_Click">
                    <StackPanel Orientation="Vertical" >
                        <Image Style="{StaticResource imageEnabled}" Width="32" Height="32"  Stretch="None" Source="Images/revision.png"/>
                        <TextBlock Margin="0,5,0,5"  Width="100" TextWrapping="Wrap" TextAlignment="Center">Update Revisions on Sheet</TextBlock>
                    </StackPanel>
                </Button>
                <Button x:Name="buttonRenumber"  Margin="10,0,0,0" VerticalAlignment="Stretch" Click="buttonRenumber_Click" IsEnabled="False">
                    <StackPanel Orientation="Vertical" >
                        <Image Style="{StaticResource imageEnabled}" Width="32" Height="32" Source="Images/renumber.png" />
                        <TextBlock Margin="0,5,0,5">Renumber Sheets</TextBlock>
                    </StackPanel>
                </Button>
                <Button x:Name="buttonSheetSetting"  Margin="5,0,0,0" VerticalAlignment="Stretch" Click="buttonSheetSetting_Click">
                    <StackPanel Orientation="Vertical" >
                        <Image Width="32" Height="32"  Stretch="None" Source="Images/settings.png"/>
                        <TextBlock Margin="0,5,0,5">Sheet Settings </TextBlock>
                    </StackPanel>
                </Button>
                <Separator/>
                <Button x:Name="buttonUpdateRevision"  Margin="5,0,0,0" VerticalAlignment="Stretch" IsEnabled="False" Click="buttonUpdateRevision_Click">
                    <StackPanel Orientation="Vertical" >
                        <Image Style="{StaticResource imageEnabled}" Width="32" Height="32" Source="Images/cloud.png" />
                        <TextBlock Margin="0,5,0,5"  Width="100" TextWrapping="Wrap" TextAlignment="Center">Create/Update Revisions</TextBlock>
                    </StackPanel>
                </Button>
                <Separator/>
                <Button x:Name="buttonAddView"  Margin="5,0,0,0" VerticalAlignment="Stretch" Click="buttonAddView_Click" IsEnabled="False">
                    <StackPanel Orientation="Vertical" >
                        <Image Style="{StaticResource imageEnabled}" Width="32" Height="32" Source="Images/add_view.png" />
                        <TextBlock Margin="0,5,0,5"  Width="100" TextWrapping="Wrap" TextAlignment="Center">Add Views to Sheet</TextBlock>
                    </StackPanel>
                </Button>
                <Button x:Name="buttonRenameView"  Margin="5,0,0,0" VerticalAlignment="Stretch" Click="buttonRenameView_Click" IsEnabled="False">
                    <StackPanel Orientation="Vertical" >
                        <Image  Style="{StaticResource imageEnabled}" Width="32" Height="32"  Stretch="None" Source="Images/edit.png" />
                        <TextBlock Margin="0,5,0,5">Rename Views</TextBlock>
                    </StackPanel>
                </Button>
                <Separator/>
                <Button x:Name="buttonUpdater"  Margin="5,0,0,0" VerticalAlignment="Stretch" Click="buttonUpdater_Click">
                    <StackPanel Orientation="Vertical" >
                        <Image x:Name="toggleImage" Style="{StaticResource updaterToggle}" Width="32" Height="32" Tag="On"/>
                        <TextBlock x:Name="toggleText" Text="On/Off Updater" Margin="0,5,0,5"/>
                    </StackPanel>
                </Button>
            </ToolBar>
        </ToolBarTray>

        <Label Content="Discipline: " HorizontalAlignment="Left" Margin="10,14,0,0" Grid.Row="1" VerticalAlignment="Top"/>
        <ComboBox x:Name="comboBoxDiscipline" HorizontalAlignment="Left" Margin="82,18,0,0" Grid.Row="1" VerticalAlignment="Top" Width="200" DisplayMemberPath="Name" SelectionChanged="comboBoxDiscipline_SelectionChanged"/>

        <GroupBox Header="Sheets" HorizontalAlignment="Stretch" Margin="7" Grid.Row="2" VerticalAlignment="Stretch">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>
                <DataGrid x:Name="dataGridSheets" SelectionChanged="dataGridSheets_SelectionChanged" CanUserAddRows="False">
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Linked}" Value="true">
                                    <Setter Property="Foreground" Value="Gray"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Linked}" Value="false">
                                    <Setter Property="Foreground" Value="Black"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Modified}" Value="true">
                                    <Setter Property="Foreground" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <TextBlock Text="{Binding ToolTip}"/>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Path=IsSelected, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Sheet Number" Binding="{Binding Number}" Width ="1*" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Sheet Name" Binding="{Binding Name}" Width ="2*" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Volume Number" Binding="{Binding VolumeNumber}" Width ="1*" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Discipline" Binding="{Binding DisciplineObj.Name}" Width ="1*" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Drawing Type" Binding="{Binding DrawingType}" Width ="1.5*" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Sorted Discipline" Binding="{Binding SortedDiscipline}" Width ="1*" IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>
                <Button x:Name="buttonCheckAll" HorizontalAlignment="Left" Margin="10,0,0,0" Grid.Row="1" VerticalAlignment="Top" Width="22" Height="22" Click="buttonCheckAll_Click">
                    <Image Source="Images/checkbox_yes.png"/>
                </Button>
                <Button x:Name="buttonCheckNone" HorizontalAlignment="Left" Margin="37,0,0,0" Grid.Row="1" VerticalAlignment="Top" Width="22" Height="22" Click="buttonCheckNone_Click">
                    <Image Source="Images/checkbox_no.png"/>
                </Button>
            </Grid>
        </GroupBox>

        <GridSplitter ResizeDirection="Rows" HorizontalAlignment="Stretch" Grid.Row="3" VerticalAlignment="Stretch">
            <GridSplitter.Background>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.WindowColorKey}}"/>
            </GridSplitter.Background>
        </GridSplitter>

        <Grid Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="0.6*"/>
            </Grid.ColumnDefinitions>
            <GroupBox Header="Views" HorizontalAlignment="Stretch" Margin="7,0,7,0" VerticalAlignment="Stretch">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <DataGrid x:Name="dataGridView" IsReadOnly="True" CanUserAddRows="False">
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Linked}" Value="true">
                                        <Setter Property="Foreground" Value="Gray"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Linked}" Value="false">
                                        <Setter Property="Foreground" Value="Black"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding UnPlaced}" Value="true">
                                        <Setter Property="Foreground" Value="Blue"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="ToolTip">
                                    <Setter.Value>
                                        <TextBlock Text="{Binding ToolTip}"/>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="View Name" Binding="{Binding Name}" Width="1.5*"/>
                            <DataGridComboBoxColumn x:Name="dataGridComboBoxViewType" Header="View Type" SelectedItemBinding="{Binding ViewType}" Width="1*"/>
                            <DataGridTextColumn Header="U" Binding="{Binding LocationU}" Width="0.5*"/>
                            <DataGridTextColumn Header="V" Binding="{Binding LocationV}" Width="0.5*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </GroupBox>
            
            <GroupBox Grid.Column="1" Header="Revisions" HorizontalAlignment="Stretch" Margin="0,0,7,0" VerticalAlignment="Stretch">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <DataGrid x:Name="dataGridRevisions" IsReadOnly="True" CanUserAddRows="False">
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Linked}" Value="true">
                                        <Setter Property="Foreground" Value="Gray"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Linked}" Value="false">
                                        <Setter Property="Foreground" Value="Black"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding NotIncluded}" Value="true">
                                        <Setter Property="Foreground" Value="Blue"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="ToolTip">
                                    <Setter.Value>
                                        <TextBlock Text="{Binding ToolTip}"/>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="1*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </GroupBox>
        </Grid>
        <Button x:Name="buttonClose" Content="Close" Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,15,15" Grid.Row="5" VerticalAlignment="Bottom" Width="75" Height="27" Click="buttonClose_Click"/>
        <StatusBar HorizontalAlignment="Stretch" Margin="0" Grid.Row="6" VerticalAlignment="Stretch">
            <StatusBarItem>
                <TextBlock Margin="5,0,5,0" Text="Ready" Name="statusLable" />
            </StatusBarItem>
            <StatusBarItem >
                <ProgressBar Value="0" Width="140" Height="16" Name="progressBar" Visibility="Hidden" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
