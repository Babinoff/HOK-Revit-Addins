<Window x:Class="HOK.SheetManager.AddIn.Windows.MainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ut="clr-namespace:HOK.SheetManager.Utils;assembly=HOK.SheetManager"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" 
        Height="1000" Width="1100" MinHeight="1000" MinWidth="1100" Icon="Images/hoklogo.ico" Title="Sheet Manager - AddIn" UseLayoutRounding="True"
        WindowStartupLocation="CenterScreen" Loaded="Window_Loaded" AllowDrop="True" Drop="Window_Drop" Closing="Window_Closing"
        BorderThickness="0,5,0,0" BorderBrush="#FFE83C53">
    <Window.Resources>
        <Style x:Key="commandButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#FF818080" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFC5C5C5" />
                                <Setter Property="BorderBrush" Value="#FFC5C5C5" />
                                <Setter Property="Foreground" Value="#ffffff" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FFE0E4E6" />
                                <Setter Property="BorderBrush" Value="#FFE0E4E6"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Chrome" Property="Background" Value="#FFE0E4E6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Image}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="HorizontalGridLinesBrush" Value="LightGray"/>
            <Setter Property="VerticalGridLinesBrush" Value="LightGray"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
        </Style>
        <ut:DisciplineFilterConverter x:Key="disciplineConverter"/>
        <ut:ViewConverter x:Key="viewConverter"/>
        <ut:RevisionIncludeConverter x:Key="revisionConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" Background="#FFF0F1F1">
            <Button Width="90"  Name="buttonConnect" Command="{Binding ConnectDBCommand}" Style="{StaticResource commandButtonStyle}">
                <Button.ToolTip>
                    <TextBlock Text="Open a database file that contains Sheet Data."/>
                </Button.ToolTip>
                <StackPanel Orientation="Vertical" >
                    <Image Margin="0,0,0,5" Height="32" Width="32" Source="Images/databaseLink.png"/>
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap">Connect Database</TextBlock>
                </StackPanel>
            </Button>
            <Button Width="90"  Name="buttonSheet" Command="{Binding UpdateSheetCommand}" IsEnabled="{Binding DatabaseOpened}" Style="{StaticResource commandButtonStyle}">
                <Button.ToolTip>
                    <TextBlock Text="Create or update sheet elements in Revit following the connected database."/>
                </Button.ToolTip>
                <StackPanel Orientation="Vertical">
                    <Image Margin="0,0,0,5" Height="32" Width="32" Source="Images/sync.png"/>
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap">Update Sheets</TextBlock>
                </StackPanel>
            </Button>
            <Button Width="90" Name="buttonRevisions" Command="{Binding UpdateRevisionCommand}" IsEnabled="{Binding DatabaseOpened}" Style="{StaticResource commandButtonStyle}">
                <Button.ToolTip>
                    <TextBlock Text="Create or update revision elements in Revit following the connected database."/>
                </Button.ToolTip>
                <StackPanel Orientation="Vertical">
                    <Image Margin="0,0,0,5" Height="32" Width="32" Source="Images/cloud.png"/>
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap">Update Revisions</TextBlock>
                </StackPanel>
            </Button>
            <Button Width="100" Name="buttonRevisionOnSheet" Command="{Binding UpdateRevisionOnSheetCommand}" IsEnabled="{Binding DatabaseOpened}" Style="{StaticResource commandButtonStyle}">
                <Button.ToolTip>
                    <TextBlock Text="Set Revision on Sheet parameters following the connected database."/>
                </Button.ToolTip>
                <StackPanel Orientation="Vertical">
                    <Image Margin="0,0,0,5" Height="32" Width="32" Source="Images/revision.png"/>
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap">Update Revisions on Sheet</TextBlock>
                </StackPanel>
            </Button>
            <Button Width="90" Name="buttonView" Command="{Binding PlaceViewCommand}" IsEnabled="{Binding DatabaseOpened}" Style="{StaticResource commandButtonStyle}">
                <Button.ToolTip>
                    <TextBlock Text="Place viewports in the assigned sheet element."/>
                </Button.ToolTip>
                <StackPanel Orientation="Vertical">
                    <Image Margin="0,0,0,5"  Height="32" Width="32" Source="Images/view.png"/>
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap">Place Views</TextBlock>
                </StackPanel>
            </Button>
            <Button Width="90" Name="buttonImport" Command="{Binding ImportViewCommand}" IsEnabled="{Binding DatabaseOpened}" Style="{StaticResource commandButtonStyle}">
                <Button.ToolTip>
                    <TextBlock Text="Import the informaiton of existing views in Revit into the connected database."/>
                </Button.ToolTip>
                <StackPanel Orientation="Vertical">
                    <Image Margin="0,0,0,5"  Height="32" Width="32" Source="Images/import.png" />
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap">Import Views</TextBlock>
                </StackPanel>
            </Button>
            <Button Width="90"  Name="buttonRenumber" Command="{Binding RenumberSheetCommand}" IsEnabled="{Binding DatabaseOpened}" Style="{StaticResource commandButtonStyle}">
                <Button.ToolTip>
                    <TextBlock Text="Renumber sheet elements following the maps in the connected database."/>
                </Button.ToolTip>
                <StackPanel Orientation="Vertical">
                    <Image Margin="0,0,0,5"  Height="32" Width="32" Source="Images/renumber.png" />
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap">Renumber Sheets</TextBlock>
                </StackPanel>
            </Button>
            <Button Width="90"  Name="buttonRename" Command="{Binding RenameViewCommand}" IsEnabled="{Binding DatabaseOpened}" Style="{StaticResource commandButtonStyle}">
                <Button.ToolTip>
                    <TextBlock Text="Rename view elements following the maps in the connected database."/>
                </Button.ToolTip>
                <StackPanel Orientation="Vertical">
                    <Image Margin="0,0,0,5"  Height="32" Width="32" Source="Images/edit.png" />
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap">Rename Views</TextBlock>
                </StackPanel>
            </Button>
            <Button Width="90"  Name="buttonSettings" Command="{Binding SettingCommand}" IsEnabled="{Binding DatabaseOpened}" Style="{StaticResource commandButtonStyle}">
                <Button.ToolTip>
                    <TextBlock Text="Settings for sheet elements"/>
                </Button.ToolTip>
                <StackPanel Orientation="Vertical">
                    <Image Margin="0,0,0,5"  Height="32" Width="32" Source="Images/settings.png" />
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap">Sheet Settings</TextBlock>
                </StackPanel>
            </Button>
            <Button Width="90"  Name="buttonUpdater" Command="{Binding UpdaterCommand}" IsEnabled="{Binding DatabaseOpened}" Style="{StaticResource commandButtonStyle}">
                <Button.ToolTip>
                    <TextBlock Text="Turn On or Off the Dynamic Updater to synchronice with the database"/>
                </Button.ToolTip>
                <StackPanel Orientation="Vertical">
                    <Image Margin="0,0,0,5"  Height="32" Width="32">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Value="True" Binding="{Binding AutoUpdate}">
                                        <Setter Property="Source" Value="Images/updater_on.ico"/>
                                    </DataTrigger>
                                    <DataTrigger Value="False" Binding="{Binding AutoUpdate}">
                                        <Setter Property="Source" Value="Images/updater_off.ico"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap">On/Off Updater</TextBlock>
                </StackPanel>
            </Button>
            <Button Width="90"  Name="buttonHelp" Command="{Binding HelpCommand}" IsEnabled="{Binding DatabaseOpened}" Style="{StaticResource commandButtonStyle}">
                <Button.ToolTip>
                    <TextBlock Text="Help Documentation"/>
                </Button.ToolTip>
                <StackPanel Orientation="Vertical">
                    <Image Margin="0,0,0,5"  Height="32" Width="32" Source="Images/help.png" />
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap">Help</TextBlock>
                </StackPanel>
            </Button>
        </StackPanel>
        <Grid Grid.Row="1" DataContext="{Binding RvtSheetData}" IsManipulationEnabled="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="250" MinHeight="250"/>
            </Grid.RowDefinitions>
            <Label Content="Discipline: " HorizontalAlignment="Left" Margin="10,14,0,0" VerticalAlignment="Top"/>
            <ComboBox x:Name="comboBoxDiscipline" HorizontalAlignment="Left" Margin="82,18,0,0" VerticalAlignment="Top" Width="200" 
                      ItemsSource="{Binding Disciplines}" DisplayMemberPath="Name" 
                      SelectedIndex="{Binding SelectedDisciplineIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <GroupBox Header="Sheets" Grid.Row="1" Margin="7" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <DataGrid x:Name="dataGridSheets" IsReadOnly="True" CanUserAddRows="False" 
                          SelectedItem="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SelectedSheet, Mode=TwoWay}">
                        <DataGrid.ItemsSource>
                            <MultiBinding Converter="{StaticResource disciplineConverter}">
                                <Binding Path="Sheets"/>
                                <Binding ElementName="comboBoxDiscipline" Path="SelectedItem"/>
                            </MultiBinding>
                        </DataGrid.ItemsSource>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding LinkStatus.IsLinked}" Value="true">
                                        <Setter Property="Foreground" Value="Gray"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding LinkStatus.IsLinked}" Value="false">
                                        <Setter Property="Foreground" Value="Black"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding LinkStatus.Modified}" Value="true">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="ToolTip">
                                    <Setter.Value>
                                        <TextBlock Text="{Binding LinkStatus.ToolTip}"/>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding Path=LinkStatus.IsSelected, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Sheet Number" Binding="{Binding Number}" Width ="1*"/>
                            <DataGridTextColumn Header="Sheet Name" Binding="{Binding Name}" Width ="2*"/>
                            <DataGridTextColumn Header="Discipline" Binding="{Binding DisciplineObj.Name}" Width="1*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button Grid.Row="1" HorizontalAlignment="Left" Margin="5,0,0,0" Height="22" Width="22" 
                            Style="{StaticResource commandButtonStyle}" Background="#FFF0F1F1" BorderBrush="#FFC5C5C5" 
                            Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CheckAllCommand}">
                        <Image Height="16" Width="16" Source="Images/checkbox_yes.png"/>
                    </Button>
                    <Button Grid.Row="1" HorizontalAlignment="Left" Margin="35,0,0,0" Height="22" Width="22" 
                            Style="{StaticResource commandButtonStyle}" Background="#FFF0F1F1" BorderBrush="#FFC5C5C5" 
                            Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.UncheckAllCommand}">
                        <Image Height="16" Width="16" Source="Images/checkbox_no.png" />
                    </Button>
                </Grid>
            </GroupBox>
            <GridSplitter ResizeDirection="Rows" HorizontalAlignment="Stretch" Grid.Row="2" VerticalAlignment="Stretch" Background="Transparent"/>
            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="0.6*"/>
                </Grid.ColumnDefinitions>
                <GroupBox Header="Views" HorizontalAlignment="Stretch" Margin="7,0,7,0" VerticalAlignment="Stretch">
                    <Grid>
                        <DataGrid x:Name="dataGridView" IsReadOnly="True" CanUserAddRows="False" >
                            <DataGrid.ItemsSource>
                                <MultiBinding UpdateSourceTrigger="Explicit" Mode="TwoWay" Converter="{StaticResource viewConverter}">
                                    <Binding Path="Views" UpdateSourceTrigger="PropertyChanged" NotifyOnSourceUpdated="True" Mode="TwoWay"/>
                                    <Binding ElementName="dataGridSheets" Path="SelectedItem"/>
                                </MultiBinding>
                            </DataGrid.ItemsSource>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LinkStatus.IsLinked}" Value="True">
                                            <Setter Property="Foreground" Value="Gray"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding LinkStatus.IsLinked}" Value="False">
                                            <Setter Property="Foreground" Value="Black"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="ToolTip">
                                        <Setter.Value>
                                            <TextBlock Text="{Binding LinkStatus.ToolTip}"/>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="View Name" Binding="{Binding Name}" Width="1.5*"/>
                                <DataGridTextColumn Header="View Type" Binding="{Binding ViewType.Name}" Width="1*"/>
                                <DataGridTextColumn Header="X" Binding="{Binding LocationU}" Width="0.5*"/>
                                <DataGridTextColumn Header="Y" Binding="{Binding LocationV}" Width="0.5*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </GroupBox>
                <GroupBox Grid.Column="1" Header="Revisions" HorizontalAlignment="Stretch" Margin="0,0,7,0" VerticalAlignment="Stretch">
                    <Grid>
                        <DataGrid x:Name="dataGridRevisions" IsReadOnly="True" CanUserAddRows="False" 
                                  ItemsSource="{Binding ElementName=dataGridSheets, Path=SelectedItem.SheetRevisions.Values, Converter={StaticResource revisionConverter}}">
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LinkStatus.IsLinked}" Value="true">
                                            <Setter Property="Foreground" Value="Gray"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding LinkStatus.IsLinked}" Value="false">
                                            <Setter Property="Foreground" Value="Black"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="ToolTip">
                                        <Setter.Value>
                                            <TextBlock Text="{Binding LinkStatus.ToolTip}"/>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Description" Binding="{Binding RvtRevision.Description}" Width="1*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </GroupBox>
            </Grid>
        </Grid>
        <StatusBar HorizontalAlignment="Stretch" Margin="0" Grid.Row="2" VerticalAlignment="Stretch">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusText}" Name="statusLable" />
            </StatusBarItem>
            <StatusBarItem  Grid.Column="1">
                <ProgressBar Value="0" Width="140" Height="16" Name="progressBar" Visibility="Hidden" />
            </StatusBarItem>
        </StatusBar>
    </Grid>

</Window>
